name: Deploy
on:
  - push
  - pull_request

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 12.x

    steps:
      - uses: actions/checkout@v2

      - name: "Use Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node-version }}"

      - name: Cache pnpm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

      - uses: pnpm/action-setup@v1.2.1
        with:
          version: 5.17.2

      - name: Cache PureScript dependencies
        uses: actions/cache@v2
        # This cache uses the .dhall files to know when it should reinstall
        # and rebuild packages. It caches both the installed packages from
        # the `.spago` directory and compilation artifacts from the `output`
        # directory. When restored the compiler will rebuild any files that
        # have changed. If you do not want to cache compiled output, remove
        # the `output` path.
        with:
          key: ${{ runner.os }}-spago-${{ hashFiles('**/*.dhall') }}
          path: |
            .spago
            run_install: true

      - name: Build
        uses: purescript-contrib/setup-purescript@main
        run: pnpm build

      - name: Release
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          NPM_TOKEN: "${{ secrets.NPM_TOKEN }}"
        run: pnpx semantic-release
